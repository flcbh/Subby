@page "/register"
@using SubbyNetwork.Models.AccountViewModels
@inject NavigationManager Navigation;

<h3>Register user</h3>

<div class="alert alert-info">
    Register new user.
</div>

<EditForm Model="@RegisterModel" OnValidSubmit="@ValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="form-group">
        <label>Forename</label>
        <InputText id="Forename" @bind-Value="RegisterModel.Forename" class="form-control" />
    </div>
    <div class="form-group">
        <label>Surname</label>
        <InputText id="Surname" @bind-Value="RegisterModel.Surname" class="form-control" />
    </div>
    <div class="form-group">
        <label>Postcode</label>
        <InputText id="Postcode" @bind-Value="RegisterModel.Postcode" class="form-control" />
    </div>
    <div class="form-group">
        <label>IsTrader</label> <br />
        <InputRadioGroup @bind-Value="RegisterModel.IsTrader" class="form-control">
            @foreach (var item in rdTrade)
            {
                <InputRadio Value="item"/> @item 
            }
        </InputRadioGroup>
    </div>
    <div class="form-group">
        <label>Email</label>
        <InputText id="Email" @bind-Value="RegisterModel.Email" class="form-control" />
    </div>
    <div class="form-group">
        <label>Password</label>
        <InputText id="password" type="password" @bind-Value="RegisterModel.Password" class="form-control" />
    </div>
    <div class="form-group">
        <label>ConfirmPassword</label>
        <InputText id="ConfirmPassword" type="password" @bind-Value="RegisterModel.ConfirmPassword" class="form-control" />
    </div>
    <div class="form-group">
        <label>PushToken</label>
        <InputText id="PushToken" @bind-Value="RegisterModel.PushToken" class="form-control" />
    </div>
    <div class="form-group mt-1">
        <button type="submit" class="btn btn-primary w-100">Save Now</button>
    </div>
</EditForm>

@code {
    private RegisterViewModel RegisterModel = new RegisterViewModel();
    List<string> rdTrade = new List<string> { "True", "False"};

    private async Task ValidSubmit()
    {
        //if (await JSRuntime.InvokeAsync<object>("confirm",  $"Are you sure you want to include the user '{RegisterModel.Forename}'?".Cast<Object>().ToArray()))
        //return;

        var successful = RegisterModel.Save(RegisterModel);

        //Not successful, don't need to do anything
        if (!successful)
            return;

        //await AuthStateProvider.Login(jwtToken);
        Navigation.NavigateTo("/login"); //Root URL
    }
}
