@page "/login"
@using Microsoft.AspNetCore.Identity
@using SubbyNetwork.Models.AccountViewModels
@inject NavigationManager Navigation;
@inject CustomAuthenticationStateProvider AuthStateProvider;


<h3>Login to Access Sustainability Yard</h3>

<div class="alert alert-info">
    Log in to ensure access to the application, enter the user and password to be authenticated.
</div>

<EditForm Model="@loginModel" OnValidSubmit="@HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="alert alert-danger" hidden="@loginModel.LoginFailureHidden">
        Invalid login attempt, please correct and try again.
    </div>
    <div class="form-group">
        <label>Email</label>
        <InputText id="email" @bind-Value="loginModel.Email" class="form-control" />
    </div>
    <div class="form-group">
        <label>Password</label>
        <InputText id="password" type="password" @bind-Value="loginModel.Password" class="form-control" />
    </div>
    <br />
    <div class="form-group">
        <div class="wrap">
            <div class="box left">
                <button type="button" class="btn btn-primary w-100" @onclick="@ForgotPasswordEventClick">Forgot Password</button>
            </div>
            <div class="box right">
                <button type="button" class="btn btn-primary w-100" @onclick="@RegisterNewEventClick">Register New</button>
            </div>
        </div>
    </div>
    <div class="form-group mt-1">
        <button type="submit" class="btn btn-primary w-100">Login Now</button>
    </div>
</EditForm>

@code {
    private LoginViewModel loginModel = new();

    private async void HandleValidSubmit()
    {
        //Valiate user acount
        var successful = loginModel.ValidateLoginAsync(out string jwtToken);

        //Not successful, don't need to do anything
        if (!successful)
            return;

        //await sessionStorage.SetItemAsync("userEmail", loginModel.Email);

        //Call login and recirect
        await AuthStateProvider.Login(jwtToken);
        Navigation.NavigateTo("/"); //Root URL
    }

    private void ForgotPasswordEventClick() => Navigation.NavigateTo("/ForgotPassword");
    private void RegisterNewEventClick() => Navigation.NavigateTo("/Register");
}
