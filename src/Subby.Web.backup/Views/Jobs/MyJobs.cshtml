@using LastContent.Utilities.Extensions
@using Microsoft.EntityFrameworkCore.Internal
@using Subby.Utilities.Extensions
@using Subby.Web.Models
@using Subby.Web.ViewComponents
@model  LastContent.Utilities.Pagination.PagedResult<Subby.Core.Models.Job.JobModel>
@{
    ViewData["Title"] = "My Jobs";
    var header = new Header
    {
        Title = "My Jobs",
        DisplayReturn = true,
        Url = @Url.Action("Index", "Jobs")
    };
}
<partial name="Partials/_PartialHeader" model="@header"/>
<div class="container">
    <h1 class="subtitle mt-4 text-center">You have <strong>@Model.RowCount</strong> job(s) posted</h1>
    <p class="text-center">Use the button below to create more jobs for the subby contractors near you!</p>
    <a asp-controller="Jobs" class="float" asp-action="New">
        <svg width="1em" height="1em" viewBox="0 0 16 16" class="bi bi-plus" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
            <path fill-rule="evenodd" d="M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z"/>
        </svg>
    </a>
    
    <div class="jobs-wrapper">

        <div class="row">
            @foreach (var job in Model.Items)
            {
                <div class="col-md-12 col-lg-6">
                    <partial name="Partials/_PartialJobCard" model="job"/>
                    <div class="job-stats">
                        <p>Your post have been viewed: <strong>@job.ViewCount times</strong> since it was posted <strong>@job.CreatedAt.TimeAgo()</strong></p>
                        <p class="mb-0">Application: <a asp-controller="Applications" asp-action="Index" asp-route-id="@job.Id"><strong>@job.Applications</strong> application(s)</a></p>
                        <p class="mb-0">Update: <a asp-controller="Jobs" asp-action="edit" asp-route-id="@job.Id">Click here</a></p>
                        <p class="mb-0">Status: 
                            @if (job.IsFilled)
                            {
                                <span class="text-success">
                                    <svg width="1em" height="1em" viewBox="0 0 16 16" class="bi bi-check2-circle" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
                                        <path fill-rule="evenodd" d="M15.354 2.646a.5.5 0 0 1 0 .708l-7 7a.5.5 0 0 1-.708 0l-3-3a.5.5 0 1 1 .708-.708L8 9.293l6.646-6.647a.5.5 0 0 1 .708 0z"/>
                                        <path fill-rule="evenodd" d="M8 2.5A5.5 5.5 0 1 0 13.5 8a.5.5 0 0 1 1 0 6.5 6.5 0 1 1-3.25-5.63.5.5 0 1 1-.5.865A5.472 5.472 0 0 0 8 2.5z"/>
                                    </svg>  
                                    Position Filled
                                </span>
                            }
                            else
                            {
                                <a href="" onclick="PositionFilled(@job.Id); return false;">Mark Position Filled</a>
                            }
                            
                        </p>
                    </div>
                </div>
            }

        </div>
        <div class="mt-2 mb-2">
            @(await Component.InvokeAsync<PagerViewComponent>(Model))
        </div>
    </div>
</div>
<partial name="Partials/_PartialBottomStack"/>

@section scripts
{
    <script>
    var pageMixin = {
            data: function () {
                return {
                    //These are reactive.  Changing them will change whether 
                    //the related button is displayed
                    page: 1,
                    pageSize: 10,
                    eventItems: [],
                    noMoreData: false
                };
            },
            methods: {
                    
                    loadPage: function(page) {
                        $.getJSON(`/jobs?page=${page}`, function (data) {
                            if (data.length == 0) {
                                console.log('No more data');
                                this.noMoreData = true;
                            }
                            else {
                                this.eventItems = data.results;
                            }
                        }.bind(this));
                    }
            }
        };
        mixinArray.push(pageMixin);
        
        function PositionFilled(id) {
            $.ajax({
                type: "POST",
                headers: {
                    'Content-Type':'application/json'
                },
                url: '/api/jobs/filled',
                data: JSON.stringify({
                    id: id
                }),
                success: function (data) {
                    window.location.reload();
                },
                failure: function (response) {
    
                },
                error: function (response) {
               
                }
            });
        }
        
    </script>
}