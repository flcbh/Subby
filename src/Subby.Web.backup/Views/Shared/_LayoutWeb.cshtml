@using System.IO
@using LastContent.Utilities.Notification
@inject INotificationService NotificationService
<!DOCTYPE html>
<html class="perfect-scrollbar-off js-focus-visible" lang="en">
<head>
    <meta charset="utf-8"/>
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <title>@ViewData["Title"]</title>
    <link rel="preconnect" href="https://fonts.gstatic.com">
    <link href="https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,400;0,500;0,700;1,400&display=swap" rel="stylesheet">
    <environment names="Development">
        <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.css"/>
        <link rel="stylesheet" href="~/css/web.css" />
    </environment>
    <environment names="Staging,Production">
        <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.css" asp-append-version="true"/>
        <link rel="stylesheet" href="~/css/web.css" asp-append-version="true"/>
    </environment>
    <link rel="stylesheet" href="https://pro.fontawesome.com/releases/v5.10.0/css/all.css" integrity="sha384-AYmEC3Yw5cVb3ZcuHtOA93w35dYTsvhLPVnYs9eStHfGJvOvKxVfELGroGkvsg+p" crossorigin="anonymous"/>
    <!-- Google Tag Manager -->
    <script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
    new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
    j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
    'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
    })(window,document,'script','dataLayer','GTM-K752Z2M');</script>
    <!-- End Google Tag Manager -->
    @RenderSection("Head", required: false)
</head>
<body>
<!-- Google Tag Manager (noscript) -->
<noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-K752Z2M"
height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
<!-- End Google Tag Manager (noscript) -->
<div class="wrapper" id="vueAppTemplate">
    @* <header> *@
    @*     <div class="container"> *@
    @*         <div class="navbar"> *@
    @*             <a class="navbar-brand" href="/"> *@
    @*                 <img class="site-logo-default" src="https://ik.imagekit.io/xbqs6c3wef/subby/logo_H-hCj85r1M.png" alt="Site Logo" /> *@
    @*             </a> *@
    @*         </div> *@
    @*     </div> *@
    @* </header> *@


    <div class="main-content">
        @if (NotificationService.Exists())
        {
            var message = NotificationService.Read();
            <div id="notification">
                <partial name="Partials/_PartialNotification" model="@message"/>
            </div>
        }
        @RenderBody()
    </div>
    <footer>
        <p class="copy-rights text-center">© Copyright @DateTime.Now.Year All Rights Reserved, Sustainability Yard Ltd Reg No.11228393</p>
    </footer>
</div>
<partial name="Partials/_PartialFooter"/>
<partial name="Partials/_PartialMenu"/>
<partial name="Partials/_PartialPremium"/>
<partial name="Partials/_PartialPayment" />
<script src="https://cdn.tiny.cloud/1/uc5fwlfz9r2els654b41gq3y6b2tfywssypxf3gh2w8p4ft0/tinymce/5/tinymce.min.js" referrerpolicy="origin"></script>
<script src="https://cdn.jsdelivr.net/npm/typed.js@2.0.11"></script>

    <script src='https://www.gstatic.com/firebasejs/6.4.2/firebase-app.js' type="text/javascript"></script>

    <script src='https://www.gstatic.com/firebasejs/6.4.2/firebase-messaging.js' type="text/javascript"></script>

    <script>

        $(function () {

            var token = null;

            var config = {
                    apiKey: "AIzaSyCedM21P6RDesb7Cy0b2KYyc6DraIjqbzQ",
                    authDomain: "subby-network.firebaseapp.com",
                    databaseURL: "https://subby-network.firebaseio.com",
                    projectId: "subby-network",
                    storageBucket: "subby-network.appspot.com",
                    messagingSenderId: "663091412740",
                    appId: "1:663091412740:web:66760d1ddf546ebd4ada51",
                    measurementId: "G-S9B2ZS1NSZ"
            };
            firebase.initializeApp(config);

            const messaging = firebase.messaging();
            debugger
            messaging.requestPermission()
                .then(function () {
                    console.log("granted");
                    if (isTokenSentToServer()) {
                        console.log("already granted");
                    } else {
                        getRegtoken();
                    }
                });


            function getRegtoken() {
                messaging.getToken().then((currentToken) => {
                    if (currentToken) {
                        console.log(currentToken);
                        setTokenSentToServer(true);
                        saveToken(currentToken)
                        //   updateUIForPushEnabled(currentToken);
                    } else {
                        console.log('No Instance ID token available. Request permission to generate one.');
                        setTokenSentToServer(false);
                    }
                }).catch((err) => {
                    console.log('An error occurred while retrieving token. ', err);
                    setTokenSentToServer(false);
                });

            }
            function setTokenSentToServer(sent) {
                window.localStorage.setItem('sentToServer', sent ? 1 : 0);
            }
            function isTokenSentToServer() {
                return window.localStorage.getItem('sentToServer') === '1';
            }
            messaging.onMessage(function (payload) {
                console.log('Message received. ', payload);

                notificationTitle = payload.notification.title;
                notificationOptions = {
                    body: payload.notification.body,
                    icon: payload.notification.icon
                };

                var notification = new Notification(notificationTitle, notificationOptions);

            });

        });


    </script>

    
    @await RenderSectionAsync("scripts", required: false).ConfigureAwait(false)
    @RenderSection("scripts", required: false)
</body>
</html>